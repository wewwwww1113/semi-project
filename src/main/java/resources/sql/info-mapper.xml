<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<!-- ByCategory : 없으면 board테이블 전체,있으면 해당 카테고리에 대해서만 select 실행 -->
	<entry key="listCount">
		SELECT COUNT(*) COUNT 
		FROM INFO_BOARD
		WHERE STATUS='Y'
	</entry>
	
	<entry key="listCountByCategory">
		SELECT COUNT(*) COUNT 
		FROM INFO_BOARD
		WHERE INFO_CATEGORY_NO=?
		AND STATUS='Y'
	</entry>
	
	<entry key="selectList">
		SELECT * 
		FROM ( SELECT ROWNUM,S.* 
		FROM ( SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		WHERE INFO_BOARD.STATUS='Y'
		ORDER BY UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	<!-- 조회수 -->
	<entry key="selectListSortbyView">
		SELECT * 
		FROM (SELECT ROWNUM,S.* 
		FROM (SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		WHERE INFO_BOARD.STATUS='Y'
		ORDER BY COUNT DESC,
		UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	<!-- 따봉 -->
	<entry key="selectListSortbyRecommend">
		SELECT * 
		FROM (
		SELECT ROWNUM,S.* 
		FROM (
		SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		WHERE INFO_BOARD.STATUS='Y'
		ORDER BY RECOMMEND DESC,
		UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	
	<entry key="selectListByCategory">
		SELECT * 
		FROM (
		SELECT ROWNUM,S.* 
		FROM (
		SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(INFO_BOARD_WRITER=USER_NO)
		WHERE INFO_CATEGORY_NO=?
		AND INFO_BOARD.STATUS='Y'
		ORDER BY UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	
	<entry key="selectListByCategorySortbyView">
		SELECT * 
		FROM (
		SELECT ROWNUM,S.* 
		FROM (
		SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		WHERE CATEGORY_NO=?
		AND INFO_BOARD.STATUS='Y'
		ORDER BY COUNT DESC,
		UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	
	<entry key="selectListByCategorySortbyRecommend">
		SELECT * 
		FROM (
		SELECT ROWNUM,S.* 
		FROM (
		SELECT BOARD_NO
		      ,CATEGORY_NAME
		      ,BOARD_TITLE
		      ,USER_ID
		      ,COUNT
		      ,RECOMMEND
		      ,UPLOAD_DATE
		FROM INFO_BOARD
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		WHERE CATEGORY_NO=?
		AND INFO_BOARD.STATUS='Y'
		ORDER BY RECOMMEND DESC,
		UPLOAD_DATE DESC) S)
		WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	
	<entry key="selectCategory">
		SELECT * 
		FROM INFO_CATEGORY
	</entry>
	<entry key="viewdetail">
	SELECT BOARD_NO
		  ,CATEGORY_NAME
		  ,BOARD_TITLE
		  ,USER_ID
		  ,COUNT
		  ,RECOMMEND
		  ,UPLOAD_DATE
	FROM INFO_BOARD
	WHERE "ROWNUM" BETWEEN ? AND ?
	</entry>
	
	
	<!-- 닉네임이 있으면 작성자에 닉네임 표기,없으면 USER_ID그대로 표기 -->
	<!-- 
	 <entry key="selectNickName">
		SELECT NICKNAME 
		FROM MEMBER
		WHERE USER_ID=?
	</entry>
	 -->
	
	<entry key="increaseCount">
		UPDATE INFO_BOARD
		SET COUNT=COUNT+1
		WHERE BOARD_NO=?
	</entry>
	
	<entry key="selectBoard">
		SELECT BOARD_NO
		      ,USER_ID
		      ,BOARD_TITLE
		      ,BOARD_CONTENT
		      ,COUNT
		      ,RECOMMEND
		      ,REVISE_DATE
		      ,CATEGORY_NAME
	    FROM INFO_BOARD
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_NO=?
	</entry>
	
	<!-- 로그인유저 아이디와 글번호를 받아 해당 유저가 이 글에 추천을 했는지 알아오는sql문 -->
	<entry key="checkRecommend">
		SELECT USER_NO
		      ,BOARD_NO
		      ,STATUS 
		FROM RECOMMEND
		WHERE USER_NO=?
		AND INFO_BOARD_NO=?
	</entry>
	
	<!-- 해당 글의 추천수 증가 -->
	<entry key="increaseRecommend">
		UPDATE INFO_BOARD
		SET RECOMMEND=RECOMMEND+1
		WHERE INFO_BOARD_NO=?
	</entry>
	
	<!-- 추천기록 남기기(중복추천 방지용) -->
	<entry key="saveRecommend">
		INSERT INTO RECOMMEND(USER_NO,INFO_BOARD_NO)
		VALUES(?,?)
	</entry>
	
	<!-- 댓글 목록 조회 -->
	<entry key="selectReply">
		SELECT REPLY_NO
		      ,USER_ID
		      ,REPLY_CONTENT
		      ,CREATE_DATE 
		FROM REPLY
		JOIN MEMBER ON(REPLY_WRITER=USER_NO)
		WHERE REF_BNO=?
		AND REPLY.STATUS='Y'
	</entry>
	
	<entry key="insertReply">
		INSERT INTO REPLY(REPLY_NO
		                 ,REF_BNO
		                 ,REPLY_WRITER
		                 ,REPLY_CONTENT)
		VALUES(SEQ_RNO.NEXTVAL,?,?,?)
	</entry>
	
	<entry key="insertBoard">
		INSERT INTO INFO_BOARD(BOARD_NO,
						BOARD_WRITER,
						BOARD_TITLE,
						BOARD_CONTENT,
						CATEGORY_NO)
		VALUES(SEQ_BNO.NEXTVAL,?,?,?,?)
	</entry>
	
	<entry key="updateBoard">
		UPDATE INFO_BOARD
		SET BOARD_TITLE=?,
			BOARD_CONTENT=?,
			CATEGORY_NO=?,
			REVISE_DATE=SYSDATE
		WHERE BOARD_NO=?
	</entry>
	
	<entry key="deleteBoard">
		UPDATE INFO_BOARD
		SET STATUS='N',
			REVISE_DATE=SYSDATE
		WHERE BOARD_NO=?
	</entry>
	
	<!-- 제목/내용/글쓴이별로 검색 -->
	<entry key="searchBoardByTitle">
		SELECT BOARD_NO
		      ,USER_ID
		      ,BOARD_TITLE
		      ,BOARD_CONTENT
		      ,COUNT
		      ,RECOMMEND
		      ,REVISE_DATE
		      ,INFO_CATEGORY_NAME
		FROM INFO_BOARD
		JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		JOIN INFO_CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_TITLE LIKE ?
		AND INFO_BOARD.STATUS='Y'
		ORDER BY BOARD_NO DESC
	</entry>
	
	<entry key="searchBoardByContent">
		SELECT BOARD_NO
		      ,USER_ID
		      ,BOARD_TITLE
		      ,BOARD_CONTENT
		      ,COUNT,RECOMMEND
		      ,REVISE_DATE
		      ,INFO_CATEGORY_NAME 
		      FROM INFO_BOARD
		      JOIN MEMBER ON(BOARD_WRITER=USER_NO)
		      JOIN INFO_CATEGORY USING(CATEGORY_NO)
		WHERE BOARD_CONTENT LIKE ?
		AND INFO_BOARD.STATUS='Y'
		ORDER BY BOARD_NO DESC
	</entry>
	
</properties>